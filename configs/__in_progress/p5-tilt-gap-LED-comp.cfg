[displayconfig]

work = image

isRPI = False
rendering = hub
rotation = 0
fullRotation = True
rotationTrailing = True
checkForConfigChanges = True
doFullReloadOnChange = True

useFilters = True
tileSizeHeight = 32
tileSizeWidth = 64
matrixTiles = 64
rows = 8
cols = 8

# ---  Also determines the window geometry
screenWidth = 384
screenHeight = 256

# ---  preparing for rotation
windowWidth = 384
windowHeight = 256

canvasWidth = 384
canvasHeight = 256

# daemon7 set up FIRESIDE
canvasOffsetX = 4
canvasOffsetY = 2

# Window Offset
windowXOffset = 2722
windowYOffset = 550

brightness =  .7
minBrightness = 0

remapImageBlock = False
remapImageBlockSection = 0,0,256,128
remapImageBlockDestination = 0, 0
remapImageBlockSectionRotation = 0


remapImageBlock2 = True
remapImageBlockSection2 = 192,0,384,32
remapImageBlockDestination2 = 0, 64
remapImageBlockSection2Rotation = 0

remapImageBlock3 = True
remapImageBlockSection3 = 192,32,384,64
remapImageBlockDestination3 = 0, 96
remapImageBlockSection3Rotation = 0


## These are the full black-out boxes that seem to
## trap the viewer 
remapImageBlock4 = True
remapImageBlockSection4 = 384,0,452,31
remapImageBlockDestination4 = 128, 32
remapImageBlockSection4Rotation = 0

remapImageBlock5 = True
remapImageBlockSection5 = 384,0,400,31
remapImageBlockDestination5 = 0, 96
remapImageBlockSection5Rotation = 0

[images]
#i1 = flames/fire-real-256b.gif
#i1 = flames/fire-real-320x224.gif
i1 = miscl/comp-384b.jpg
i2 =

useBlanks = False
useImageFilter = True
verticalOrientation = 0
resetProbability = .001

# for rotated image, lines are width, boxWidth is height
# 160
lines = 256
boxHeight = 16
boxWidth = 256
xPos1 = 0
yPosBase = 0
targetPalette = selective
targetClrs = 68,78,83,89,111,121,10,12,13,14,15,16,17
#targetClrs = 92,106,107,117,119,124
#targetClrs = 104,91,96,104,112,104
#targetClrs = 14,15,16
#targetClrs = 1,2,3

bgFilterProb = 0.1
imageFilterProb = .01

# the chance that the image stops and glitches
pausePlayProb = .031
# the chance release after pause
releasePauseProb = .004

# when and image is still, chance that a gltch happens
# the total number of glitches before things move on
imageGlitchProb = .06

# the increase of the imageGlichProb when the animation is paused
glitchChanceWhenPausedFactor = 20.0

# probability that the color will change
overlayChangeProb = .0075

# prob block will relocate
overlayChangePosProb = .01

# prob block will resize
overlayChangeSizeProb = .01

# 1 = darker 0 = add
overLayMode = 1

# the prob that the animation of each frame happens
animateProb = 1.0

# total number of glitches per period allowed
imageGlitchCountLimit = 50

imageGlitchSize = 16
imageGlitchDisplacement = 70

imageGlitchDisplacementHorizontal = 20
imageglitchDisplacementVerical = 30
glitchCountRestFactor = 1

#after this many frames, force a glitch
forceGlitchFrameCount = 190

alterAsASCIIProb = .01


playSpeed = .02
# used in fader class
# represents the number of fade-through frames between rendered images
# 0 is fast - i.e. same speed as delay, 1 evens things out, 40 is like
# slow motion
doingRefreshCount = 2
# if this is above 0 it will change the rate
doingRefreshCountVariability = .001
# the probability that the rate will return to the base fade-through count
doingRefreshCountVariabilityReset = .02
# the chance that the rate is fast vs slow-mo
doingRefreshCountFastProb = 0

# Color overlay / pixel color block
clrBlkWidth = 120
clrBlkHeight = 200
overlayxPos = 32
overlayyPos = 32

# moves the dither sparkle around
filterRemapping = True
filterRemappingProb = .02
filterRemapminHoriSize = 224
filterRemapminVertSize = 236

filterRemapRangeX = 160
filterRemapRangeY = 256


[diag]
#--------------------------#
fontColor = 255,255,0
outlineColor = 255,0,0
fontColor2 = 0,0,100
bgColor = 0,0,254
showGrid = True
fontSize = 10

brightness =  .8
outerColor = 10,0,100
innerColor = 230,40,0
borderColor = 10,0,0
