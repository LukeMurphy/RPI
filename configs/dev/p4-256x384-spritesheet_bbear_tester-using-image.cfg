[displayconfig]
#----------------------------------------------------#
# work = spritesheet3
# work = diagnostics
work = image

rendering = hub
rotation = 90
fullRotation = True
rotationTrailing = False
checkForConfigChanges = True
doFullReloadOnChange = True

isRPI = False

tileSizeHeight = 32
tileSizeWidth = 64
matrixTiles = 8
rows = 8
cols = 8

# ---  Also determines the window geometry
screenWidth = 384
screenHeight = 384

# ---  preparing for rotation
windowWidth = 384
windowHeight = 384

canvasWidth = 384
canvasHeight = 384

# - for small adjustments when sending to 
# - matrix panels & cards
canvasOffsetX = 3
canvasOffsetY = 3

# Window Offset
# Window Offset
# Window Offset
windowXOffset = 1583
windowYOffset = 60


brightness =  .5
minBrightness = 0

imageXOffset = 0
imageYOffset = 0


remapImageBlock = False
remapImageBlockSection = 0,0,384,256
remapImageBlockDestination = 0,0

remapImageBlock2 = False
remapImageBlockSection2 =  192,0,192,192
remapImageBlockDestination2 = 192,8
remapImageBlockSection2Rotation = 0

remapImageBlock3 = False
remapImageBlockSection3 =  0,0,192,192
remapImageBlockDestination3 = 0,0



usePixelSort = True
pixelSortRotatesWithImage = False
pixSortDirection = medial
unsharpMaskPercent = 30
blurRadius = 0
pixSortXOffset = 0
pixSortYOffset = 0
pixSortboxHeight = 192
pixSortboxWidth = 1
pixSortgap = 0
pixSortprobDraw = .7
pixSortprobGetNextColor = 1
pixSortProbDecriment = 0
pixSortSizeDecriment = 0
pixSortSampleVariance = 12
pixSortDrawVariance = 1
randomColorProbabilty = .001
brightnessVarLow = .9
brightnessVarHi = 1.1
pixelSortAppearanceProb = .99


useBlur = False
blurXOffset = 120
blurYOffset = 120
blurSectionWidth = 90
blurSectionHeight = 20
sectionBlurRadius = 2

useFilters = True
ditherfilterbrightness = .9

forceBGSwap = False



###############################################
[images]
###############################################
# i1 = flames/fire-real-224x300-side-d2b2.gif

i1 = /spritesheets/obear2.png
#----------------------------------------------------#
imageIsSpriteSheet = True
resizeAnimationtoFit = True
resizeToFit = True

# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320


# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 384
animationHeight = 384

# background color HSV ranges
bg_minHue = 310
bg_maxHue = 35
bg_minSaturation = .90
bg_maxSaturation = 1.0
bg_minValue = .70
bg_maxValue = .90
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .01
#----------------------------------------------------#



useBlanks = False
useImageFilter = True
verticalOrientation = 0
resetProbability = .001

# for rotated image, lines are width, boxWidth is height
# 160
lines = 256
boxHeight = 16
boxWidth = 256
xPos1 = 0
yPosBase = 0
targetPalette = selective
targetClrs = 68,78,83,89,111,121,10,12,13,14,15,16,17
#targetClrs = 92,106,107,117,119,124
#targetClrs = 104,91,96,104,112,104
#targetClrs = 14,15,16
#targetClrs = 1,2,3

bgFilterProb = 0.1
imageFilterProb = .01

# the chance that the image stops and glitches
pausePlayProb = .005
# the chance release after pause
releasePauseProb = .004

# when and image is still, chance that a gltch happens
# the total number of glitches before things move on
imageGlitchProb = .06

# the increase of the imageGlichProb when the animation is paused
glitchChanceWhenPausedFactor = 20.0

# probability that the color will change
overlayChangeProb = .0075

# prob block will relocate
overlayChangePosProb = .01

# prob block will resize
overlayChangeSizeProb = .01

#alpha
colorOverlayAlpha = 150

# 1 = darker 0 = add
overLayMode = 1

# the prob that the animation of each frame happens
animateProb = 1.0

# total number of glitches per period allowed
imageGlitchCountLimit = 50

imageGlitchSize = 16
imageGlitchDisplacement = 70

imageGlitchDisplacementHorizontal = 20
imageglitchDisplacementVerical = 30
glitchCountRestFactor = 1

#after this many frames, force a glitch
forceGlitchFrameCount = 190

alterAsASCIIProb = .01

# delay is the time between checking if the frame should advance
delay = .02
# slotRate is kind of like frameRate in the sense that it represents
# the time delay before making a new frame
slotRate = .03

# used in fader class
# represents the number of fade-through frames between rendered images
# 0 is fast - i.e. same speed as delay, 1 evens things out, 40 is like
# slow motion
doingRefreshCount = 2
# if this is above 0 it will change the rate
doingRefreshCountVariability = .001
# the probability that the rate will return to the base fade-through count
doingRefreshCountVariabilityReset = .02
# the chance that the rate is fast vs slow-mo
doingRefreshCountFastProb = 0

# Color overlay / pixel color block
clrBlkWidth = 120
clrBlkHeight = 48
overlayxPos = 32
overlayyPos = 32

# moves the dither sparkle around
filterRemapping = True
filterRemappingProb = .02
filterRemapminHoriSize = 256
filterRemapminVertSize = 236

filterRemapRangeX = 256
filterRemapRangeY = 256






#----------------------------------------------------#
[base-parameters]
#----------------------------------------------------#


# chance the pixelsort lines appear
pixelSortProbOn = .005
pixelSortProbOff = .015

# moves the dither sparkle around
filterRemapping = True
filterRemappingProb = .004
filterRemapminHoriSize = 256
filterRemapminVertSize = 384

filterRemapRangeX = 384
filterRemapRangeY = 256


# the delay between cycles
playSpeed = .02

# animations = a-3,a-3,a-3
# animations = a-2
animations = obear,a-2,a-3,a-0
playTimes = 20,20,20,20
playInOrder = False

drawMoire = True
drawMoireProb = .08
drawMoireProbOff = .01

moireXPos  = 120
moireYPos  = 110
moireXDistance = 10
moireYDistance = 10

setMoireColor = False
moireColor = 0,140,60,50
moireColorAlt = 40,0,0,100
moireColorAltProb = .5

#----------------------------------------------------#
[obear]
i1 = assets/imgs/spritesheets/obear2.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 12
animSpeedMax = 12

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 350
animationHeight = 384
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = 0
animationYOffset = -30

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .01
# chance that unimations resume
unPauseProb = .006
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01


#----------------------------------------------------#
[a-0]
i1 = assets/imgs/spritesheets/bbear-2.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = False
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 
# 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 12

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 320
animationHeight = 384
resizeAnimationtoFit = True


# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = 0
animationYOffset = -30

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 310
bg_maxHue = 35
bg_minSaturation = .90
bg_maxSaturation = 1.0
bg_minValue = .70
bg_maxValue = .90
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01

#

#----------------------------------------------------#
[a-2]
i1 = assets/imgs/spritesheets/babyanimalsheet-bear-head-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 256
frameHeight = 256
totalFrames = 24
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 256
sliceWidth = 256
sliceHeightMin = 256
sliceHeight = 256
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 320
animationHeight = 384
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = 0
animationYOffset = -40

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 310
bg_maxHue = 35
bg_minSaturation = .90
bg_maxSaturation = 1.0
bg_minValue = .70
bg_maxValue = .90
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01

#----------------------------------------------------#
[a-3]
i1 = assets/imgs/spritesheets/babyanimalsheet-bunny-right.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = False
# the spritesheet frame dimensions
frameWidth = 256
frameHeight = 256
totalFrames = 24
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 256
sliceWidth = 256
sliceHeightMin = 256
sliceHeight = 256
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 320
animationHeight = 384
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 0
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0
# compensates for rotation if needed
animationXOffset = 0
animationYOffset = -30

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .003
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 310
bg_maxHue = 35
bg_minSaturation = .90
bg_maxSaturation = 1.0
bg_minValue = .70
bg_maxValue = .90
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50
# chance that the background changes
backgroundColorChangeProb = .01





#----------------------------------------------------#
[diag]
#----------------------------------------------------#
fontColor = 0,100,90
outlineColor = 205,0,0
fontColor2 = 90,100,0
bgColor = 0,0,100
showGrid = True
fontSize = 10

brightness =  .8
outerColor = 0,0,100
innerColor = 30,40,0
borderColor = 0,0,0


