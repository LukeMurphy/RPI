[displayconfig]

#----------------------------------------------------##----------------------------------------------------#
work = spritesheet3
# work = diagnostics
#----------------------------------------------------##----------------------------------------------------#

rendering = hub
rotation = 180
fullRotation = True
rotationTrailing = False
checkForConfigChanges = False
doFullReloadOnChange = False

isRPI = False

tileSizeHeight = 32
tileSizeWidth = 64
matrixTiles = 8
rows = 8
cols = 8

# ---  Also determines the window geometry
screenWidth = 384
screenHeight = 256

# ---  preparing for rotation
windowWidth = 384
windowHeight = 256

canvasWidth = 384
canvasHeight = 256

# - for small adjustments when sending to 
# - matrix panels & cards
canvasOffsetX = 3
canvasOffsetY = 3

# Window Offset
windowXOffset = 140
windowYOffset = 140


brightness =  .9
minBrightness = 0

imageXOffset = 0
imageYOffset = 0


remapImageBlock = False
remapImageBlockSection = 0,0,384,256
remapImageBlockDestination = 0,0

remapImageBlock2 = False
remapImageBlockSection2 =  192,0,192,192
remapImageBlockDestination2 = 192,8
remapImageBlockSection2Rotation = 0

remapImageBlock3 = False
remapImageBlockSection3 =  0,0,192,192
remapImageBlockDestination3 = 0,0



usePixelSort = True
pixelSortRotatesWithImage = False
pixSortDirection = medial
unsharpMaskPercent = 30
blurRadius = 0
pixSortXOffset = 0
pixSortYOffset = 0
pixSortboxHeight = 192
pixSortboxWidth = 1
pixSortgap = 0
pixSortprobDraw = .7
pixSortprobGetNextColor = 1
pixSortProbDecriment = 0
pixSortSizeDecriment = 0
pixSortSampleVariance = 12
pixSortDrawVariance = 1
randomColorProbabilty = .001
brightnessVarLow = .9
brightnessVarHi = 1.1
pixelSortAppearanceProb = .99


useBlur = False
blurXOffset = 120
blurYOffset = 120
blurSectionWidth = 90
blurSectionHeight = 20
sectionBlurRadius = 2

useFilters = True
ditherfilterbrightness = .9

forceBGSwap = False


#----------------------------------------------------##----------------------------------------------------#
[base-parameters]
#----------------------------------------------------##----------------------------------------------------#


# chance the pixelsort lines appear
pixelSortProbOn = .005
pixelSortProbOff = .015

# moves the dither sparkle around
filterRemapping = True
filterRemappingProb = .004
filterRemapminHoriSize = 256
filterRemapminVertSize = 384

filterRemapRangeX = 384
filterRemapRangeY = 256


# the delay between cycles
playSpeed = .02

# animations = a-3,a-3,a-3
# animations = obear-turning,obear-3,pensive-left
animations = obear-turning,obear-3,pensive-left,obear,a-2,a-3,a-0
# animations = obear,a-2,a-3,a-0
playTimes = 10,10,10,10,10,10,10
playInOrder = False

drawMoire = True
drawMoireProb = .08
drawMoireProbOff = .01

moireXPos  = 120
moireYPos  = 110
moireXDistance = 10
moireYDistance = 10

setMoireColor = False
moireColor = 0,140,60,50
moireColorAlt = 40,0,0,100
moireColorAltProb = .5



#----------------------------------------------------##----------------------------------------------------#
[pensive-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-pensive-left.png
#----------------------------------------------------##----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 3
animSpeedMax = 3

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 384
animationHeight = 414
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -30
animationYOffset = -40

# When first drawn onto canvas
# if rotated by 90 degrees, x offset becomes apparent
# y or vertical offset and visaversa for y becoming
# the horizontal displacement
# with the character animations, often best to keep
# tied to the bottom edge of the screen / canvas
randomPlacemnetXRange = 1
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01



#----------------------------------------------------##----------------------------------------------------#
[obear-3]
i1 = assets/imgs/spritesheets/obear-3.png
#----------------------------------------------------##----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 6
frameCols = 6
frameRows = 1

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 5
animSpeedMax = 20

reversing = False

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 384
animationHeight = 414
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -30
animationYOffset = -40

# When first drawn onto canvas
# if rotated by 90 degrees, x offset becomes apparent
# y or vertical offset and visaversa for y becoming
# the horizontal displacement
# with the character animations, often best to keep
# tied to the bottom edge of the screen / canvas
randomPlacemnetXRange = 1
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.05
# chance that unimations resume
unPauseProb = .01
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .06

# pause on first frame of spritesheet
pauseOnFirstFrameProb = .075
pauseOnLastFrameProb = .05

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 1
imageGlitchDisplacementVertical = 1


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 255

# chance that the background changes
backgroundColorChangeProb = .01



#----------------------------------------------------##----------------------------------------------------#
[obear-turning]
i1 = assets/imgs/spritesheets/obear-turning.png
#----------------------------------------------------##----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 22
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 3
animSpeedMax = 3

reversing = True

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 384
animationHeight = 414
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -30
animationYOffset = -40

# When first drawn onto canvas
# if rotated by 90 degrees, x offset becomes apparent
# y or vertical offset and visaversa for y becoming
# the horizontal displacement
# with the character animations, often best to keep
# tied to the bottom edge of the screen / canvas
randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.05
# chance that unimations resume
unPauseProb = .01
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .06

# pause on first frame of spritesheet
pauseOnFirstFrameProb = .075
pauseOnLastFrameProb = .01

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 255

# chance that the background changes
backgroundColorChangeProb = .01



#----------------------------------------------------##----------------------------------------------------#
[obear]
i1 = assets/imgs/spritesheets/obear2.png
#----------------------------------------------------##----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 12
animSpeedMax = 12

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 384
animationHeight = 414
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -30
animationYOffset = -40

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .01
# chance that unimations resume
unPauseProb = .006
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01


#----------------------------------------------------##----------------------------------------------------#
[a-0]
i1 = assets/imgs/spritesheets/bbear-2.png
#----------------------------------------------------##----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = False
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 
# 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 12

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 384
animationHeight = 390
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -0
animationYOffset = -40

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 310
bg_maxHue = 35
bg_minSaturation = .90
bg_maxSaturation = 1.0
bg_minValue = .70
bg_maxValue = .90
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01

#

#----------------------------------------------------##----------------------------------------------------#
[a-2]
i1 = assets/imgs/spritesheets/babyanimalsheet-bear-head-left.png
#----------------------------------------------------##----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 256
frameHeight = 256
totalFrames = 24
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 256
sliceWidth = 256
sliceHeightMin = 256
sliceHeight = 256
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 384
animationHeight = 400
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -20
animationYOffset = -70

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 310
bg_maxHue = 35
bg_minSaturation = .90
bg_maxSaturation = 1.0
bg_minValue = .70
bg_maxValue = .90
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01

#----------------------------------------------------##----------------------------------------------------#
[a-3]
i1 = assets/imgs/spritesheets/babyanimalsheet-bunny-right.png
#----------------------------------------------------##----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = False
# the spritesheet frame dimensions
frameWidth = 256
frameHeight = 256
totalFrames = 24
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 256
sliceWidth = 256
sliceHeightMin = 256
sliceHeight = 256
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 384
animationHeight = 414
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -30
animationYOffset = -40

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .003
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 310
bg_maxHue = 35
bg_minSaturation = .90
bg_maxSaturation = 1.0
bg_minValue = .70
bg_maxValue = .90
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50
# chance that the background changes
backgroundColorChangeProb = .01





#----------------------------------------------------##----------------------------------------------------#
[diag]
#----------------------------------------------------##----------------------------------------------------#
fontColor = 0,100,90
outlineColor = 205,0,0
fontColor2 = 90,100,0
bgColor = 0,0,100
showGrid = True
fontSize = 10

brightness =  .8
outerColor = 0,0,100
innerColor = 30,40,0
borderColor = 0,0,0


