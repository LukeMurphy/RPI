[displayconfig]
#----------------------------------------------------#
work = spritesheet3
# work = spritesheet3x
# work = diagnostics
isRPI = False
rendering = hub
rotation = 0
fullRotation = True
rotationTrailing = True
checkForConfigChanges = True
doFullReloadOnChange = True

tileSizeHeight = 64
tileSizeWidth = 64
matrixTiles = 64
rows = 3
cols = 3
# ---  Also determines the window geometry
screenWidth = 800
screenHeight = 800

# ---  preparing for rotation
windowWidth = 800
windowHeight = 800

canvasWidth = 800
canvasHeight = 800

# daemon7 set up FIRESIDE
canvasOffsetX = 3
canvasOffsetY = 3


# Window Offset
windowXOffset = 999
windowYOffset = 60
# windowYOffset = 700


remapImageBlock = False  
remapImageBlockSection = 0,0,800,800
remapImageBlockDestination = 0,0

remapImageBlock2 = False  
remapImageBlockSection2 = 0,64,128,96
remapImageBlockDestination2 = 0,32

remapImageBlock3 = False  
remapImageBlockSection3 = 128,64,512,96
remapImageBlockDestination3 = 0,0

remapImageBlock4 = False  
remapImageBlockSection4 = 512,0,768,32
remapImageBlockDestination4 = 0,64

brightness =  1.1
minBrightness = 0


useBlur = False
blurXOffset = 0
blurYOffset = 0
blurSectionWidth = 128
blurSectionHeight = 128
sectionBlurRadius = 1

useFilters = True
_ditherFilterBrightness = .95

outPutPath = /Users/lamshell/Library/CloudStorage/Dropbox/Studio/In Progress/GENERATED_ IMAGES/output/
saveToFile = Yes
timeToTakeInterval = 15




#----------------------------------------------------#
#----------------------------------------------------#
#----------------------------------------------------#
#----------------------------------------------------#





[base-parameters]
# chance the pixelsort lines appear

delay = .05
slotRate = .03

pixelSortProbOn = .00
pixelSortProbOff = .015

# moves the dither sparkle around
filterRemapping = True
filterRemappingProb = .01
filterRemapminHoriSize = 400
filterRemapminVertSize = 400

filterRemapRangeX = 800
filterRemapRangeY = 800


# the delay between cycles
playSpeed = .02

# animations = snakey-right,fig-standing-left,kittybird-left,worry-right,fig-right,bunny-right,pensive-left,mousey-left,standing-bear-left,standing-ba-left,bear-head-left
# playTimes = 10,10,10,10,10,10,10,10,10,10,10,10
# playInOrder = False

animations = testy-lines
# animations = obear-turning,mousey-left,pensive-left,worry-right,a-1,a-2,a-3
# animations = a-0
playTimes = 40,40,40,40,40,40,40
playInOrder = False

drawMoire = True
drawMoireProb = .01
drawMoireProbOff = .01
moireXPos = 400
moireYPos = 200
moireXDistance = 30
moireYDistance = 10
setmoireColor = True
moireColorAltProb = .1
moireColor = 100,0,0,100
moireColorAlt = 100,0,0,100

animationFrameXOffset = 0
animationFrameYOffset = 0


uselastoverlay = True
# changed to be chance that an overlay block is drawn 
useLastOverlayProb = .2
clearlastoverlayprob = .0003
lastOverlayBox = 0,0,800,800
lastOverlayFill = 280,66,.750,1.0,.250,1.0,0,0

overlayTileSizeWidthMin = 64
overlayTileSizeHeightMin = 64
overlayTileSizeWidthMax = 364
overlayTileSizeHeightMax = 364

lastOverLayColorRange = 120,66,.750,1.0,.250,1.0,0,0
lastOverlayAlphaRange = 40,248
forcelastoverlay = True
lastOverlayBlur = 1

compositionModeChangeProb = .01

bgGlitchCyclesMin = 50
bgGlitchCyclesMax = 50




#----------------------------------------------------##----------------------------------------------------#
[testy-lines]
i1 = assets/imgs/spritesheets/testy-lines.png
#----------------------------------------------------##----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 12
frameCols = 4
frameRows = 3

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 3
animSpeedMax = 3

reversing = True

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 800
animationHeight = 800
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.9
# compensates for rotation if needed
animationXOffset = 10
animationYOffset = 0

# When first drawn onto canvas
# if rotated by 90 degrees, x offset becomes apparent
# y or vertical offset and visaversa for y becoming
# the horizontal displacement
# with the character animations, often best to keep
# tied to the bottom edge of the screen / canvas
randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# pause on first frame of spritesheet
pauseOnFirstFrameProb = .075
pauseOnLastFrameProb = .01

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .01







#----------------------------------------------------##----------------------------------------------------#
[obear-turning]
i1 = assets/imgs/spritesheets/obear-turning.png
#----------------------------------------------------##----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 22
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 3
animSpeedMax = 3

reversing = True

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 192
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.0
# compensates for rotation if needed
animationXOffset = 10
animationYOffset = 0

# When first drawn onto canvas
# if rotated by 90 degrees, x offset becomes apparent
# y or vertical offset and visaversa for y becoming
# the horizontal displacement
# with the character animations, often best to keep
# tied to the bottom edge of the screen / canvas
randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# pause on first frame of spritesheet
pauseOnFirstFrameProb = .075
pauseOnLastFrameProb = .01

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .01



#----------------------------------------------------#
[mousey-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-mousey-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 192
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -2
animationYOffset = 20

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .00










#----------------------------------------------------#
[a-0]
i1 = assets/imgs/spritesheets/bbear-2.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 20

randomPlacement = False
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 
# 2 is generally very smooth
animSpeedMin = 3
animSpeedMax = 3

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 192
resizeAnimationtoFit = True


# rotates each animation unit
animationRotation = 0
# random +/- range
animationRotationJitter = 0
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.0
# compensates for rotation if needed
animationXOffset = 0
animationYOffset = -0

randomPlacemnetXRange = 0
randomPlacemnetYRange = 0

# probability that any one unit changes parameters and position
changeAnimProb = .00
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5


# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 0
imageGlitchDisplacementVertical = 0


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .004

#----------------------------------------------------#
[a-1]
i1 = assets/imgs/spritesheets/bbear-2.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 20

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 
# 2 is generally very smooth
animSpeedMin = 3
animSpeedMax = 3

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 192
resizeAnimationtoFit = True


# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.01
# compensates for rotation if needed
animationXOffset = 0
animationYOffset = -10

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .004

#----------------------------------------------------#
[a-2]
i1 = assets/imgs/spritesheets/babyanimalsheet-bear-head-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 256
frameHeight = 256
totalFrames = 24
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 256
sliceWidth = 256
sliceHeightMin = 256
sliceHeight = 256
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 192
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = 0
animationYOffset = -10

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .004

#----------------------------------------------------#
[a-3]
i1 = assets/imgs/spritesheets/babyanimalsheet-bunny-right.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = False
# the spritesheet frame dimensions
frameWidth = 256
frameHeight = 256
totalFrames = 24
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 256
sliceWidth = 256
sliceHeightMin = 256
sliceHeight = 256
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 192
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 0
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0
# compensates for rotation if needed
animationXOffset = 0
animationYOffset = -10

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .003
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .004


#----------------------------------------------------#
[worry-right]
i1 = assets/imgs/spritesheets/babyanimalsheet-worry-right.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 4
animSpeedMax = 4

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 192
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.0
# compensates for rotation if needed
animationXOffset = -1
animationYOffset = 20

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .004


#----------------------------------------------------#

#----------------------------------------------------#
[snakey-right]
i1 = assets/imgs/spritesheets/babyanimalsheet-snake-right.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 205
frameHeight = 205
totalFrames = 25
frameCols = 5
frameRows = 5

# slice parameters
sliceWidthMin = 205
sliceWidth = 205
sliceHeightMin = 205
sliceHeight = 205
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 4
animSpeedMax = 4

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 160
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -18
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .004


#----------------------------------------------------#
[bunny-right]
i1 = assets/imgs/spritesheets/babyanimalsheet-bunny-right.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = False
# the spritesheet frame dimensions
frameWidth = 256
frameHeight = 256
totalFrames = 24
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 256
sliceWidth = 256
sliceHeightMin = 256
sliceHeight = 256
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 160
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 0
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0
# compensates for rotation if needed
animationXOffset = 0
animationYOffset = -0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .03
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150
# chance that the background changes
backgroundColorChangeProb = .004

#----------------------------------------------------#
[fig-right]
i1 = assets/imgs/spritesheets/babyanimalsheet-fig-right.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = False
# the spritesheet frame dimensions
frameWidth = 255
frameHeight = 255
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 256
sliceWidth = 256
sliceHeightMin = 256
sliceHeight = 256
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 160
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 0
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0
# compensates for rotation if needed
animationXOffset = -10
animationYOffset = -0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .03
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150
# chance that the background changes
backgroundColorChangeProb = .004



#----------------------------------------------------#
[standing-bear-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-standing-bear-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 205
frameHeight = 205
totalFrames = 15
frameCols = 5
frameRows = 3

# slice parameters
sliceWidthMin = 205
sliceWidth = 205
sliceHeightMin = 205
sliceHeight = 205
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 160
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -10
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .004

#----------------------------------------------------#
[pensive-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-pensive-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 192
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = 90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.0
# compensates for rotation if needed
animationXOffset = -1
animationYOffset = 20

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.0051
# chance that unimations resume
unpauseProb = 0.005
# chance that the glitching pauses
freezeGlitchProb = 0.01
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .004

#----------------------------------------------------#
[fig-standing-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-fig-standing-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 160
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -10
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .004

#----------------------------------------------------#
[kittybird-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-kittybird-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 160
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -10
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .004



#----------------------------------------------------#
[standing-ba-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-standing-ba-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 205
frameHeight = 205
totalFrames = 15
frameCols = 5
frameRows = 3

# slice parameters
sliceWidthMin = 205
sliceWidth = 205
sliceHeightMin = 205
sliceHeight = 205
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 160
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -9
animationYOffset = -0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150
# chance that the background changes
backgroundColorChangeProb = .004

#----------------------------------------------------#
[bear-head-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-bear-head-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 256
frameHeight = 256
totalFrames = 24
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 256
sliceWidth = 256
sliceHeightMin = 256
sliceHeight = 256
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 192
animationHeight = 160
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -10
animationYOffset = -0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = 0.08
# chance that unimations resume
unpauseProb = 0.008
# chance that the glitching pauses
freezeGlitchProb = 0.03
# chance that the glitching resumes
unFreezeGlitchProb = .5

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 240
bg_maxHue = 37
bg_minSaturation = 1.0
bg_maxSaturation = 1.0
bg_minValue = .99
bg_maxValue = .99
bg_dropHueMinValue = 270
bg_dropHueMaxValue = 320
# background color alpha 
bg_alpha = 150

# chance that the background changes
backgroundColorChangeProb = .004







#----------------------------------------------------#
[diag]
#----------------------------------------------------#
fontColor = 0,100,90
outlineColor = 205,0,0
fontColor2 = 90,100,0
bgColor = 0,0,100
showGrid = True
fontSize = 10

brightness =  .8
outerColor = 0,0,100
innerColor = 30,40,0
borderColor = 0,0,0

