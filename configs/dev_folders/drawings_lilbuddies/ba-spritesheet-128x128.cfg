[displayconfig]
#----------------------------------------------------#
work = spritesheet2
# work = diagnostics
# NOTE the brightness has been adjusted down for display on the very bright outdoors panels -

isRPI = False
rendering = hub
rotation = 90
fullRotation = True
rotationTrailing = True
checkForConfigChanges = True
doFullReloadOnChange = True

tileSizeHeight = 32
tileSizeWidth = 64
matrixTiles = 64
rows = 4
cols = 12

# ---  Also determines the window geometry
screenWidth = 128
screenHeight = 128

# ---  preparing for rotation
windowWidth = 128
windowHeight = 128

canvasWidth = 128
canvasHeight = 128

# daemon7 set up FIRESIDE
canvasOffsetX = 3
canvasOffsetY = 3

# Window Offset
#windowXOffset = 2997
#windowYOffset = 330

# Window Offset
# windowXOffset = 2583
# windowXOffset = 2583 + 192 + 10
windowXOffset = 2775
# windowYOffset = 60 + 128 + 60
windowYOffset = 60


remapImageBlock = False  
remapImageBlockSection = 0,0,256,256
remapImageBlockDestination = 0,0

remapImageBlock2 = True  
remapImageBlockSection2 = 64,0,128,128
remapImageBlockDestination2 = 64,-3

remapImageBlock3 = True  
remapImageBlockSection3 = 0,0,64,128
remapImageBlockDestination3 = 0,-1

remapImageBlock4 = False  
remapImageBlockSection4 = 512,0,768,32
remapImageBlockDestination4 = 0,64

brightness =  .7
minBrightness = 0


useBlur = False
blurXOffset = 0
blurYOffset = 0
blurSectionWidth = 256
blurSectionHeight = 256
sectionBlurRadius = 1

useFilters = True
ditherFilterBrightness = .995



[base-parameters]
# chance the pixelsort lines appear
pixelSortProbOn = .005
pixelSortProbOff = .015

# moves the dither sparkle around
filterRemapping = True
filterRemappingProb = .004
filterRemapminHoriSize = 192
filterRemapminVertSize = 120

filterRemapRangeX = 120
filterRemapRangeY = 120


# the delay between cycles
playSpeed = .02
# animations = bbunny-right,snakey-right,fig-standing-left,kittybird-left,worry-right,fig-right,bunny-right,pensive-left,mousey-left,standing-bear-left,bear-head-left
animations = obear
playTimes = 20,20,20,20,20,20,20,20,20,20,20,20
playInOrder = False

drawMoire = False
drawMoireProb = .00
drawMoireProbOff = .01


#----------------------------------------------------#
[tester]
i1 = assets/imgs/drawings/KouniyoshiX-Gen2b.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 800
frameHeight = 800
totalFrames = 1
frameCols = 1
frameRows = 1

# slice parameters
sliceWidthMin = 800
sliceWidth = 800
sliceHeightMin = 800
sliceHeight = 800
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 4
animSpeedMax = 4

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 140
animationHeight = 140
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = 0
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01


#----------------------------------------------------#
[obear]
i1 = assets/imgs/spritesheets/obear2.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 12
animSpeedMax = 12

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -15
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .01
# chance that unimations resume
unPauseProb = .006
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01


#----------------------------------------------------#
[worry-right]
i1 = assets/imgs/spritesheets/babyanimalsheet-worry-right.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 4
animSpeedMax = 4

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -14
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01


#----------------------------------------------------#

#----------------------------------------------------#
[snakey-right]
i1 = assets/imgs/spritesheets/babyanimalsheet-snake-right.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 205
frameHeight = 205
totalFrames = 25
frameCols = 5
frameRows = 5

# slice parameters
sliceWidthMin = 205
sliceWidth = 205
sliceHeightMin = 205
sliceHeight = 205
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 4
animSpeedMax = 4

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -18
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 350
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01


#----------------------------------------------------#
[bunny-right]
i1 = assets/imgs/spritesheets/babyanimalsheet-bunny-right.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = False
# the spritesheet frame dimensions
frameWidth = 256
frameHeight = 256
totalFrames = 24
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 256
sliceWidth = 256
sliceHeightMin = 256
sliceHeight = 256
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 0
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0
# compensates for rotation if needed
animationXOffset = 0
animationYOffset = -0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .003
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.95
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50
# chance that the background changes
backgroundColorChangeProb = .01


#----------------------------------------------------#
[bbunny-right]
i1 = assets/imgs/spritesheets/babyanimalsheet-bbunny-right.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -9
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01


#----------------------------------------------------#
[fig-right]
i1 = assets/imgs/spritesheets/babyanimalsheet-fig-right.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = False
# the spritesheet frame dimensions
frameWidth = 255
frameHeight = 255
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 256
sliceWidth = 256
sliceHeightMin = 256
sliceHeight = 256
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 0
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0
# compensates for rotation if needed
animationXOffset = -10
animationYOffset = -0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .003
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.95
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50
# chance that the background changes
backgroundColorChangeProb = .01



#----------------------------------------------------#
[standing-bear-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-standing-bear-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 205
frameHeight = 205
totalFrames = 15
frameCols = 5
frameRows = 3

# slice parameters
sliceWidthMin = 205
sliceWidth = 205
sliceHeightMin = 205
sliceHeight = 205
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -10
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01

#----------------------------------------------------#
[pensive-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-pensive-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -12
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01

#----------------------------------------------------#
[fig-standing-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-fig-standing-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -10
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01

#----------------------------------------------------#
[kittybird-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-kittybird-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -10
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01

#----------------------------------------------------#
[mousey-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-mousey-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 320
frameHeight = 320
totalFrames = 20
frameCols = 4
frameRows = 5

# slice parameters
sliceWidthMin = 320
sliceWidth = 320
sliceHeightMin = 320
sliceHeight = 320
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -12
animationYOffset = 0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01

#----------------------------------------------------#
[standing-ba-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-standing-ba-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 205
frameHeight = 205
totalFrames = 15
frameCols = 5
frameRows = 3

# slice parameters
sliceWidthMin = 205
sliceWidth = 205
sliceHeightMin = 205
sliceHeight = 205
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -9
animationYOffset = -0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01

#----------------------------------------------------#
[bear-head-left]
i1 = assets/imgs/spritesheets/babyanimalsheet-bear-head-left.png
#----------------------------------------------------#

# Number of individual animation units
numberOfCells = 1

randomPlacement = True
# the spritesheet frame dimensions
frameWidth = 256
frameHeight = 256
totalFrames = 24
frameCols = 4
frameRows = 6

# slice parameters
sliceWidthMin = 256
sliceWidth = 256
sliceHeightMin = 256
sliceHeight = 256
step = 1
fixedPosition = True

# controls speed 2 is generally very smooth
animSpeedMin = 10
animSpeedMax = 10

# the animation is drawn onto a buffered image 
# that can be resized
animationWidth = 128
animationHeight = 128
resizeAnimationtoFit = True

# rotates each animation unit
animationRotation = -90
# random +/- range
animationRotationJitter = 1
# if this is non-zero, will rotate each unit
# in random +/- range
animationRotationRateRange = 0.05
# compensates for rotation if needed
animationXOffset = -10
animationYOffset = -0

randomPlacemnetXRange = 10
randomPlacemnetYRange = 10

# probability that any one unit changes parameters and position
changeAnimProb = .001
# chance that animations all pause
pauseProb = .006
# chance that unimations resume
unPauseProb = .005
# chance that the glitching pauses
freezeGlitchProb = .01
# chance that the glitching resumes
unFreezeGlitchProb = .06

# glitch displacement parameters 
# random from 1 to these values
imageGlitchDisplacementHorizontal = 2
imageGlitchDisplacementVertical = 3


# background color HSV ranges
bg_minHue = 340
bg_maxHue = 40
bg_minSaturation = 0.9
bg_maxSaturation = 0.95
bg_minValue = .6
bg_maxValue = .7
bg_dropHueMinValue = 0
bg_dropHueMaxValue = 0
# background color alpha 
bg_alpha = 50

# chance that the background changes
backgroundColorChangeProb = .01







#----------------------------------------------------#
[diag]
#----------------------------------------------------#
fontColor = 0,100,90
outlineColor = 205,0,0
fontColor2 = 90,100,0
bgColor = 0,0,100
showGrid = True
fontSize = 10

brightness =  .8
outerColor = 0,0,100
innerColor = 30,40,0
borderColor = 0,0,0

